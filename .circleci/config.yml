# Configuration file for https://circleci.com/gh/angular/angular-cli

# Note: YAML anchors allow an object to be re-used, reducing duplication.
# The ampersand declares an alias for an object, then later the `<<: *name`
# syntax dereferences it.
# See http://blog.daemonl.com/2016/02/yaml.html
# To validate changes, use an online parser, eg.
# http://yaml-online-parser.appspot.com/

version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.0.1

# Variables

## IMPORTANT
# Windows needs its own cache key because binaries in node_modules are different.
# See https://circleci.com/docs/2.0/caching/#restoring-cache for how prefixes work in CircleCI.
var_1: &cache_key v1-angular_devkit-12.18-{{ checksum "yarn.lock" }}
var_1_win: &cache_key_win v1-angular_devkit-win-12.18-{{ checksum "yarn.lock" }}
var_3: &default_nodeversion '12.18'
# Workspace initially persisted by the `setup` job, and then enhanced by `setup-and-build-win`.
# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
# https://circleci.com/blog/deep-diving-into-circleci-workspaces/
var_4: &workspace_location .
# Filter to only release branches on a given job.
var_5: &only_release_branches
  filters:
    branches:
      only:
        - master
        - /\d+\.\d+\.x/

# Executor Definitions
# https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-executors
executors:
  action-executor:
    parameters:
      nodeversion:
        type: string
        default: *default_nodeversion
    docker:
      - image: cimg/node:<< parameters.nodeversion >>
    working_directory: ~/ng
    resource_class: small

  test-executor:
    parameters:
      nodeversion:
        type: string
        default: *default_nodeversion
    docker:
      - image: cimg/node:<< parameters.nodeversion >>
    working_directory: ~/ng
    environment:
      NPM_CONFIG_PREFIX: ~/.npm-global
    resource_class: large

  windows-executor:
    # Same as https://circleci.com/orbs/registry/orb/circleci/windows, but named.
    working_directory: ~/ng
    resource_class: windows.medium
    shell: powershell.exe -ExecutionPolicy Bypass
    machine:
      # Contents of this image:
      # https://circleci.com/docs/2.0/hello-world-windows/#software-pre-installed-in-the-windows-image
      image: windows-server-2019-vs2019:stable

# Command Definitions
# https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-commands
commands:
  custom_attach_workspace:
    description: Attach workspace at a predefined location
    steps:
      - attach_workspace:
          at: *workspace_location

# Job definitions
jobs:
  setup:
    executor: action-executor
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Rebase PR on target branch
          command: >
            if [[ -n "${CIRCLE_PR_NUMBER}" ]]; then
              # User is required for rebase.
              git config user.name "angular-ci"
              git config user.email "angular-ci"
              # Rebase PR on top of target branch.
              node tools/rebase-pr.js angular/angular-cli ${CIRCLE_PR_NUMBER}
            else
              echo "This build is not over a PR, nothing to do."
            fi
      - restore_cache:
          keys:
            - *cache_key
      - run: yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - persist_to_workspace:
          root: *workspace_location
          paths:
            - ./*
      - save_cache:
          key: *cache_key
          paths:
            - ~/.cache/yarn

  e2e-cli-node-10:
    executor:
      name: test-executor
      nodeversion: '10.20'
    parallelism: 1
    steps:
      - custom_attach_workspace
      - browser-tools/install-chrome
      - run:
          name: Initialize Environment
          command: |
            ./.circleci/env.sh
            # Ensure latest v6 npm version to support local package repository
            PATH=~/.npm-global/bin:$PATH npm install --global npm@6
      - run: PATH=~/.npm-global/bin:$PATH node ./tests/legacy-cli/run_e2e tests/third-party/material-icons

workflows:
  version: 2
  default_workflow:
    jobs:
      # Linux jobs
      - setup
      - e2e-cli-node-10:
          post-steps:
            - store_artifacts:
                path: /tmp/dist
                destination: cli/new-production
          requires:
            - setup
