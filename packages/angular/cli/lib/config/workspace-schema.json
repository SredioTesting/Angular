{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "ng-cli://config/schema.json",
  "title": "Angular CLI Workspace Configuration",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string"
    },
    "version": {
      "$ref": "#/definitions/fileVersion"
    },
    "cli": {
      "$ref": "#/definitions/cliOptions"
    },
    "schematics": {
      "$ref": "#/definitions/schematicOptions"
    },
    "newProjectRoot": {
      "type": "string",
      "description": "Path where new projects will be created."
    },
    "defaultProject": {
      "type": "string",
      "description": "Default project name used in commands.",
      "x-deprecated": "The project to use will be determined from the current working directory."
    },
    "projects": {
      "type": "object",
      "patternProperties": {
        "^(?:@[a-zA-Z0-9_-]+/)?[a-zA-Z0-9_-]+$": {
          "$ref": "#/definitions/project"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "required": ["version"],
  "definitions": {
    "cliOptions": {
      "type": "object",
      "properties": {
        "defaultCollection": {
          "description": "The default schematics collection to use.",
          "type": "string",
          "x-deprecated": "Use 'schematicCollections' instead."
        },
        "schematicCollections": {
          "type": "array",
          "description": "The list of schematic collections to use.",
          "items": {
            "type": "string",
            "uniqueItems": true
          }
        },
        "packageManager": {
          "description": "Specify which package manager tool to use.",
          "type": "string",
          "enum": ["npm", "cnpm", "yarn", "pnpm"]
        },
        "warnings": {
          "description": "Control CLI specific console warnings",
          "type": "object",
          "properties": {
            "versionMismatch": {
              "description": "Show a warning when the global version is newer than the local one.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "analytics": {
          "type": ["boolean", "string"],
          "description": "Share anonymous usage data with the Angular Team at Google."
        },
        "analyticsSharing": {
          "type": "object",
          "properties": {
            "tracking": {
              "description": "Analytics sharing info tracking ID.",
              "type": "string",
              "pattern": "^(GA|UA)?-\\d+-\\d+$"
            },
            "uuid": {
              "description": "Analytics sharing info universally unique identifier.",
              "type": "string",
              "format": "uuid"
            }
          },
          "additionalProperties": false
        },
        "cache": {
          "description": "Control disk cache.",
          "type": "object",
          "properties": {
            "environment": {
              "description": "Configure in which environment disk cache is enabled.",
              "type": "string",
              "enum": ["local", "ci", "all"]
            },
            "enabled": {
              "description": "Configure whether disk caching is enabled.",
              "type": "boolean"
            },
            "path": {
              "description": "Cache base path.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "cliGlobalOptions": {
      "type": "object",
      "properties": {
        "defaultCollection": {
          "description": "The default schematics collection to use.",
          "type": "string",
          "x-deprecated": "Use 'schematicCollections' instead."
        },
        "schematicCollections": {
          "type": "array",
          "description": "The list of schematic collections to use.",
          "items": {
            "type": "string",
            "uniqueItems": true
          }
        },
        "packageManager": {
          "description": "Specify which package manager tool to use.",
          "type": "string",
          "enum": ["npm", "cnpm", "yarn", "pnpm"]
        },
        "warnings": {
          "description": "Control CLI specific console warnings",
          "type": "object",
          "properties": {
            "versionMismatch": {
              "description": "Show a warning when the global version is newer than the local one.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "analytics": {
          "type": ["boolean", "string"],
          "description": "Share anonymous usage data with the Angular Team at Google."
        },
        "analyticsSharing": {
          "type": "object",
          "properties": {
            "tracking": {
              "description": "Analytics sharing info tracking ID.",
              "type": "string",
              "pattern": "^(GA|UA)?-\\d+-\\d+$"
            },
            "uuid": {
              "description": "Analytics sharing info universally unique identifier.",
              "type": "string",
              "format": "uuid"
            }
          },
          "additionalProperties": false
        },
        "completion": {
          "type": "object",
          "description": "Angular CLI completion settings.",
          "properties": {
            "prompted": {
              "type": "boolean",
              "description": "Whether the user has been prompted to add completion command prompt."
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "schematicOptions": {
      "type": "object",
      "properties": {
        "@schematics/angular:application": {
          "$ref": "#/definitions/schematicsAngularApplicationSchema"
        },
        "@schematics/angular:class": {
          "$ref": "#/definitions/schematicsAngularClassSchema"
        },
        "@schematics/angular:component": {
          "$ref": "#/definitions/schematicsAngularComponentSchema"
        },
        "@schematics/angular:directive": {
          "$ref": "#/definitions/schematicsAngularDirectiveSchema"
        },
        "@schematics/angular:enum": {
          "$ref": "#/definitions/schematicsAngularEnumSchema"
        },
        "@schematics/angular:guard": {
          "$ref": "#/definitions/schematicsAngularGuardSchema"
        },
        "@schematics/angular:interceptor": {
          "$ref": "#/definitions/schematicsAngularInterceptorSchema"
        },
        "@schematics/angular:interface": {
          "$ref": "#/definitions/schematicsAngularInterfaceSchema"
        },
        "@schematics/angular:library": {
          "$ref": "#/definitions/schematicsAngularLibrarySchema"
        },
        "@schematics/angular:pipe": {
          "$ref": "#/definitions/schematicsAngularPipeSchema"
        },
        "@schematics/angular:ng-new": {
          "$ref": "#/definitions/schematicsAngularNgNewSchema"
        },
        "@schematics/angular:resolver": {
          "$ref": "#/definitions/schematicsAngularResolverSchema"
        },
        "@schematics/angular:service": {
          "$ref": "#/definitions/schematicsAngularServiceSchema"
        },
        "@schematics/angular:web-worker": {
          "$ref": "#/definitions/schematicsAngularWebWorkerSchema"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "fileVersion": {
      "type": "integer",
      "description": "File format version",
      "minimum": 1
    },
    "project": {
      "type": "object",
      "properties": {
        "cli": {
          "defaultCollection": {
            "description": "The default schematics collection to use.",
            "type": "string",
            "x-deprecated": "Use 'schematicCollections' instead."
          },
          "schematicCollections": {
            "type": "array",
            "description": "The list of schematic collections to use.",
            "items": {
              "type": "string",
              "uniqueItems": true
            }
          }
        },
        "schematics": {
          "$ref": "#/definitions/schematicOptions"
        },
        "prefix": {
          "type": "string",
          "format": "html-selector",
          "description": "The prefix to apply to generated selectors."
        },
        "root": {
          "type": "string",
          "description": "Root of the project files."
        },
        "i18n": {
          "$ref": "#/definitions/project/definitions/i18n"
        },
        "sourceRoot": {
          "type": "string",
          "description": "The root of the source files, assets and index.html file structure."
        },
        "projectType": {
          "type": "string",
          "description": "Project type.",
          "enum": ["application", "library"]
        },
        "architect": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/project/definitions/target"
          }
        },
        "targets": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/project/definitions/target"
          }
        }
      },
      "required": ["root", "projectType"],
      "anyOf": [
        {
          "required": ["architect"],
          "not": {
            "required": ["targets"]
          }
        },
        {
          "required": ["targets"],
          "not": {
            "required": ["architect"]
          }
        },
        {
          "not": {
            "required": ["targets", "architect"]
          }
        }
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z]{1,3}-.*": {}
      },
      "definitions": {
        "i18n": {
          "description": "Project i18n options",
          "type": "object",
          "properties": {
            "sourceLocale": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Specifies the source locale of the application.",
                  "default": "en-US",
                  "$comment": "IETF BCP 47 language tag (simplified)",
                  "pattern": "^[a-zA-Z]{2,3}(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-[a-zA-Z]{5,8})?(-x(-[a-zA-Z0-9]{1,8})+)?$"
                },
                {
                  "type": "object",
                  "description": "Localization options to use for the source locale",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Specifies the locale code of the source locale",
                      "pattern": "^[a-zA-Z]{2,3}(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-[a-zA-Z]{5,8})?(-x(-[a-zA-Z0-9]{1,8})+)?$"
                    },
                    "baseHref": {
                      "type": "string",
                      "description": "HTML base HREF to use for the locale (defaults to the locale code)"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "locales": {
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z]{2,3}(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-[a-zA-Z]{5,8})?(-x(-[a-zA-Z0-9]{1,8})+)?$": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Localization file to use for i18n"
                    },
                    {
                      "type": "array",
                      "description": "Localization files to use for i18n",
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      }
                    },
                    {
                      "type": "object",
                      "description": "Localization options to use for the locale",
                      "properties": {
                        "translation": {
                          "oneOf": [
                            {
                              "type": "string",
                              "description": "Localization file to use for i18n"
                            },
                            {
                              "type": "array",
                              "description": "Localization files to use for i18n",
                              "items": {
                                "type": "string",
                                "uniqueItems": true
                              }
                            }
                          ]
                        },
                        "baseHref": {
                          "type": "string",
                          "description": "HTML base HREF to use for the locale (defaults to the locale code)"
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        "target": {
          "oneOf": [
            {
              "$comment": "Extendable target with custom builder",
              "type": "object",
              "properties": {
                "builder": {
                  "type": "string",
                  "description": "The builder used for this package.",
                  "not": {
                    "enum": [
                      "@angular-devkit/build-angular:app-shell",
                      "@angular-devkit/build-angular:browser",
                      "@angular-devkit/build-angular:browser-esbuild",
                      "@angular-devkit/build-angular:dev-server",
                      "@angular-devkit/build-angular:extract-i18n",
                      "@angular-devkit/build-angular:karma",
                      "@angular-devkit/build-angular:protractor",
                      "@angular-devkit/build-angular:server",
                      "@angular-devkit/build-angular:ng-packagr"
                    ]
                  }
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "type": "object"
                },
                "configurations": {
                  "type": "object",
                  "description": "A map of alternative target options.",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              },
              "additionalProperties": false,
              "required": ["builder"]
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:app-shell"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersAppShellSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersAppShellSchema"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:browser"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersBrowserSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersBrowserSchema"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:browser-esbuild"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersBrowserEsBuildSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersBrowserEsBuildSchema"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:dev-server"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersDevServerSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersDevServerSchema"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:extract-i18n"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersExtractI18nSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersExtractI18nSchema"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:karma"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersKarmaSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersKarmaSchema"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:protractor"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersProtractorSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersProtractorSchema"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:server"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersServerSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersServerSchema"
                  }
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "builder": {
                  "const": "@angular-devkit/build-angular:ng-packagr"
                },
                "defaultConfiguration": {
                  "type": "string",
                  "description": "A default named configuration to use when a target configuration is not provided."
                },
                "options": {
                  "$ref": "#/definitions/angularBuildersNgPackagrSchema"
                },
                "configurations": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/angularBuildersNgPackagrSchema"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "global": {
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/fileVersion"
        },
        "cli": {
          "$ref": "#/definitions/cliGlobalOptions"
        },
        "schematics": {
          "$ref": "#/definitions/schematicOptions"
        }
      },
      "required": ["version"]
    },

    "schematicsAngularApplicationSchema": {
      "$ref": "../../../../schematics/angular/application/schema.json"
    },
    "schematicsAngularClassSchema": {
      "$ref": "../../../../schematics/angular/class/schema.json"
    },
    "schematicsAngularComponentSchema": {
      "$ref": "../../../../schematics/angular/component/schema.json"
    },
    "schematicsAngularDirectiveSchema": {
      "$ref": "../../../../schematics/angular/directive/schema.json"
    },
    "schematicsAngularEnumSchema": {
      "$ref": "../../../../schematics/angular/enum/schema.json"
    },
    "schematicsAngularGuardSchema": {
      "$ref": "../../../../schematics/angular/guard/schema.json"
    },
    "schematicsAngularInterceptorSchema": {
      "$ref": "../../../../schematics/angular/interceptor/schema.json"
    },
    "schematicsAngularInterfaceSchema": {
      "$ref": "../../../../schematics/angular/interface/schema.json"
    },
    "schematicsAngularLibrarySchema": {
      "$ref": "../../../../schematics/angular/library/schema.json"
    },
    "schematicsAngularPipeSchema": {
      "$ref": "../../../../schematics/angular/pipe/schema.json"
    },
    "schematicsAngularNgNewSchema": {
      "$ref": "../../../../schematics/angular/ng-new/schema.json"
    },
    "schematicsAngularResolverSchema": {
      "$ref": "../../../../schematics/angular/resolver/schema.json"
    },
    "schematicsAngularServiceSchema": {
      "$ref": "../../../../schematics/angular/service/schema.json"
    },
    "schematicsAngularWebWorkerSchema": {
      "$ref": "../../../../schematics/angular/web-worker/schema.json"
    },
    "angularBuildersAppShellSchema": {
      "$ref": "../../../../schematics/angular/app-shell/schema.json"
    },
    "angularBuildersBrowserSchema": {
      "$ref": "../../../../angular_devkit/build_angular/src/builders/browser/schema.json"
    },
    "angularBuildersBrowserEsBuildSchema": {
      "$ref": "../../../../angular_devkit/build_angular/src/builders/browser-esbuild/schema.json"
    },
    "angularBuildersDevServerSchema": {
      "$ref": "../../../../angular_devkit/build_angular/src/builders/dev-server/schema.json"
    },
    "angularBuildersExtractI18nSchema": {
      "$ref": "../../../../angular_devkit/build_angular/src/builders/extract-i18n/schema.json"
    },
    "angularBuildersKarmaSchema": {
      "$ref": "../../../../angular_devkit/build_angular/src/builders/karma/schema.json"
    },
    "angularBuildersProtractorSchema": {
      "$ref": "../../../../angular_devkit/build_angular/src/builders/protractor/schema.json"
    },
    "angularBuildersServerSchema": {
      "$ref": "../../../../angular_devkit/build_angular/src/builders/server/schema.json"
    },
    "angularBuildersNgPackagrSchema": {
      "$ref": "../../../../angular_devkit/build_angular/src/builders/ng-packagr/schema.json"
    }
  }
}
